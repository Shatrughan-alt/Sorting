import java.util.*;

public class merge {
    public static void merge(int arr[],int start,int end){
        if(start<end){
            int partition=start+(end-start)/2;
            merge(arr,start,partition);
            merge(arr,partition+1,end);
            abmergekro(arr,start,partition,end);
        }
    }
    public static void abmergekro(int arr[],int start,int mid,int end){
        int n1=mid-start+1;
        int n2=end-mid;
        int left[]=new int[mid-start+1];
        int right[]=new int[end-mid];
        for(int i=0;i<n1;i++){
            left[i]=arr[start+i];
        }
        for(int i=0;i<n2;i++){
            right[i]=arr[mid+i+1];
        }
        int i=0,j=0,k=start;
        while(i<n1&&j<n2){
            if(left[i]<=right[j]){
                arr[k]=left[i];
                i++;
                k++;
            }
            else{
                arr[k]=right[j];
                j++;
                k++;
            }
        }
        while(i<n1){
            arr[k]=left[i];
            i++;k++;
        }
        while (j < n2) {
            arr[k] = right[j];
            j++;
            k++;
        }
    }
    public static void print(int arr[]) {
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr[] = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        merge(arr,0,arr.length-1);
        print(arr);
    }
}
